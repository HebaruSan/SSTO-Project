//Handle boosters
@PART[*_LPGB]:HAS[@RESOURCE[LiquidFuel]]:FOR[SSTOLPG4] {
	SSTOFuel = #$RESOURCE[LiquidFuel]/maxAmount$
}
@PART[*_LPGB]:HAS[@RESOURCE[Oxidizer]]:FOR[SSTOLPG4] {
	SSTOFuel = #$RESOURCE[LiquidFuel]/maxAmount$
}
@PART[*_LPGB]:HAS[@RESOURCE[Oxidizer],@RESOURCE[LiquidFuel]]:FOR[SSTOLPG4] {
	SSTOFuel = #$RESOURCE[LiquidFuel]/maxAmount$
	@SSTOFuel += #$RESOURCE[Oxidizer]/maxAmount$
}
@PART[*_LPGB]:FOR[SSTOLPG5]{ //edit tank name and mass
	tankmass = #$SSTOFuel$ //calculate tank mass
	@tankmass *= 5 //liters of fuel
	@tankmass /=  #$@SSTOLPG[LPG]/ratio$ //configurable mass ratio
	remainmass = #$mass$ //calculate engine mass - it is reserved
	@remainmass -= #$tankmass$
	@mass = #$tankmass$
	@mass += #$remainmass$
	@SSTOFuel += #$MODULE[ModuleFuelTanks]/volume$
	//remove original MFT module (for MFT preconfigured tanks), ModularMFT runs AFTER LPG
	!MODULE[ModuleFuelTanks]{}
}

@PART[*_LPGB]:FOR[SSTOLPG5]{ //handle LPG only tanks
	@title = #$title$ (LPG)
	x = 0.7
	@x /= 1.35
	y = 2
	@y /= 1.35
	!RESOURCE[LiquidFuel]{} //remove reources only now
	!RESOURCE[Oxidizer]{} 
	RESOURCE{
		name = LPG
		amount = #$../SSTOFuel$
		@amount *= #$../y$
		maxAmount = #$amount$
	}
	RESOURCE{
		name = Oxidizer
		amount = #$../SSTOFuel$
		@amount *= #$../x$
		maxAmount = #$amount$
	}
}
@PART[*_LPGB]:FOR[SSTOLPG6]:NEEDS[modularFuelTanks]{ //MFT compatibility: Use MFT instead of stock tanks	
	!RESOURCE[LPG] {} //remove reources only now
	!RESOURCE[Oxidizer] {}
	MODULE
	{
		name = ModuleFuelTanks
		volume = #$../SSTOFuel$
		type = LPGox
		basemass = #$../mass$
	}
}

//===================================================================
//Now handle engine part
@PART[bluedog_*_LPGB]:FOR[SSTOLPG4]{ //Increased LPG improvement - BDB engines have inferior Isp, so increase by 20%
	%SSTOLPG = 1.2
}
@PART[B9_*_LPGB]:FOR[SSTOLPG4]{ //Intermediate LPG improvement -both normal and high efficiency engines
	%SSTOLPG = 1.05
}
@PART[RSB*_LPGB]:FOR[SSTOLPG4]{ //Realistic LPG improvement
	%SSTOLPG = 1.04
}
@PART[BAEengine*_LPGB]:FOR[SSTOLPG4]{ //Increased LPG improvement - BAE engines have inferior Isp, so increase by 20%
	%SSTOLPG = 1.2
}
@PART[*_LPGB]:HAS[#manufacturer[Alcentar]]:FOR[SSTOLPG4]{ //RealEngines or LCA
	%SSTOLPG = 1.06
	//Determine if using LCA pack or RealEngines - the second should improve 4%
	SSTOTMP = #$MODEL/model$
	@SSTOTMP ^= "R(.*?)k" //LCA won't match
}
@PART[*_LPGB]:HAS[#SSTOTMP[ealEnginesPac]]:FOR[SSTOLPG4]{ //Realistic improvement - 4%
	%SSTOLPG = 1.04
}
@PART[*_LPGB]:FOR[SSTOLPG5]{   //Apply the changes for engine - Rockets and jets, no nukes
  @MODULE[ModuleEngines*]:HAS[@PROPELLANT[LiquidFuel],@PROPELLANT[Oxidizer]],*{
	//3.5:1 mass OX/LPG
	@PROPELLANT[Oxidizer]{
		@ratio = 0.7 //3.5 volumetric
	}
	@PROPELLANT[LiquidFuel]{
		@name = LPG
		@ratio = 2 //2 volumetric
	}
	
    @atmosphereCurve
    {
      k0 = #$key,0[1, ]$
      @k0 *= #$../../SSTOLPG$
      @key,0 = #0 $k0$
      
      k1 = #$key,1[1, ]$
      @k1 *= #$../../SSTOLPG$
      @key,1 = #1 $k1$
    }
  }

  @MODULE[ModuleEngines*]:HAS[@PROPELLANT[LiquidFuel],@PROPELLANT[IntakeAir]],*{  //Jets
	//3.5:1 mass OX/LPG
	//
	@PROPELLANT[IntakeAir]{
		@ratio *= 0.15
	}
	@PROPELLANT[LiquidFuel]{
		@name = LPG
	}
	
    @atmosphereCurve
    {
      k0 = #$key,0[1, ]$
      @k0 *= 1.2
      @key,0 = #0 $k0$
    }
  }
}
@PART[*_LPGB]:FOR[SSTOLPG5]{ //Clean up temporary distinguisher
	!SSTOTMP = delete temporary
}